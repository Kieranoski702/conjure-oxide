var searchIndex = JSON.parse('{\
"conjure_oxide":{"doc":"","t":"CCAAANNNDENENNNNNNNDENENNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMNENNNNNGLLLLLLLLLLLLLF","n":["Error","Model","ast","error","parse","BoolDomain","Bounded","ConstantInt","DecisionVariable","Domain","Eq","Expression","Geq","Gt","Ineq","IntDomain","Leq","Lt","MachineName","Model","Name","Neq","Range","Reference","Single","Sum","SumGeq","SumLeq","UserName","add_variable","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","constraints","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","domain","eq","eq","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_json","hash","into","into","into","into","into","into","new","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_domain","variables","Err","Error","JSON","NotImplemented","Ok","Other","Parse","Result","borrow","borrow_mut","fmt","fmt","from","from","from","into","source","to_string","try_from","try_into","type_id","parse_json"],"q":[[0,"conjure_oxide"],[5,"conjure_oxide::ast"],[127,"conjure_oxide::error"],[148,"conjure_oxide::parse"],[149,"core::clone"],[150,"core::cmp"],[151,"core::result"],[152,"serde::de"],[153,"serde::de"],[154,"core::fmt"],[155,"core::option"],[156,"serde::ser"],[157,"serde::ser"],[158,"core::any"],[159,"serde_json::error"],[160,"anyhow"],[161,"core::error"]],"d":["","","","Top-level error types for Conjure-Oxide.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains the error value","","","","Contains the success value","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,0,0,0,0,5,6,8,0,0,8,0,8,8,8,5,8,8,2,0,0,8,0,8,6,8,8,8,2,1,1,2,3,5,6,8,1,2,3,5,6,8,1,2,3,5,6,8,1,2,3,5,6,8,2,1,1,1,2,3,5,6,8,3,1,2,3,5,6,8,2,1,2,3,3,5,6,8,1,2,3,5,6,8,1,2,1,2,3,5,6,8,1,2,1,2,3,5,6,8,1,2,3,5,6,8,3,1,2,3,5,6,8,1,2,3,5,6,8,1,2,3,5,6,8,1,1,19,0,26,26,19,26,26,0,26,26,26,26,26,26,26,26,26,26,26,26,26,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[3,3],[5,5],[[[6,[-1]]],[[6,[-1]]],7],[8,8],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[2,2],9],0,[[],1],[-1,[[10,[1]]],11],[-1,[[10,[2]]],11],[-1,[[10,[3]]],11],[-1,[[10,[5]]],11],[-1,[[10,[[6,[-2]]]]],11,12],[-1,[[10,[8]]],11],0,[[1,1],13],[[2,2],13],[[3,3],13],[[5,5],13],[[[6,[-1]],[6,[-1]]],13,14],[[8,8],13],[[-1,-2],13,[],[]],[[1,15],16],[[2,15],16],[[3,15],16],[[3,15],16],[[5,15],16],[[[6,[-1]],15],16,17],[[8,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[18,[[19,[1]]]],[[2,-1],4,20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[2,2],[[21,[9]]]],[[1,-1],10,22],[[2,-1],10,22],[[3,-1],10,22],[[5,-1],10,22],[[[6,[-1]],-2],10,23,22],[[8,-1],10,22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,24,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[[1,2,5],4],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[26,15],16],[[26,15],16],[27,26],[28,26],[-1,-1,[]],[-1,-2,[],[]],[26,[[21,[29]]]],[-1,24,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,25,[]],[18,[[19,[1]]]]],"c":[],"p":[[3,"Model",5],[4,"Name",5],[3,"DecisionVariable",5],[15,"tuple"],[4,"Domain",5],[4,"Range",5],[8,"Clone",149],[4,"Expression",5],[4,"Ordering",150],[4,"Result",151],[8,"Deserializer",152],[8,"Deserialize",152],[15,"bool"],[8,"PartialEq",150],[3,"Formatter",153],[6,"Result",153],[8,"Debug",153],[15,"str"],[6,"Result",127],[8,"Hasher",154],[4,"Option",155],[8,"Serializer",156],[8,"Serialize",156],[3,"String",157],[3,"TypeId",158],[4,"Error",127],[3,"Error",159],[3,"Error",160],[8,"Error",161]]},\
"minion_rs":{"doc":"This crate provides low level Rust bindings to the Minion …","t":"GAAFNNNENENNNDNNNNDEEGLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLNENNENNLLLLLLLLLLLLLLLLLLLLLLLL","n":["Callback","ast","error","run_minion","Bool","Bool","Bound","Constant","ConstantAsVar","Constraint","Discrete","Ineq","Integer","Model","NameRef","SparseBound","SumGeq","SumLeq","SymbolTable","Var","VarDomain","VarName","add_var","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","constraints","contains","default","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_variable_order","get_vartype","into","into","into","into","into","into","named_variables","new","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","InvalidInstance","MinionError","NotImplemented","Other","RuntimeError","RuntimeError","UnknownError","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"minion_rs"],[4,"minion_rs::ast"],[81,"minion_rs::error"],[112,"core::result"],[113,"core::option"],[114,"core::fmt"],[115,"core::fmt"],[116,"core::any"],[117,"anyhow"],[118,"core::error"],[119,"alloc::string"]],"d":["Callback function used to capture results from minion as …","The Model Syntax tree for the Minion bindings.","Error types for Minion bindings.","Run Minion on the given Model.","","","","","","","","","","","","","","","","A variable can either be a named variable, or an anomynous …","","","Creates a new variable and adds it to the symbol table. If …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A lookup table of all named variables.","","","","","","","","","","","","","","","","","","","","","The model given to Minion is invalid.","A wrapper over all errors thrown by <code>minion_rs</code>.","","","RuntimeErrors are thrown by Minion during execution.","","An unknown error has occurred.","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,11,8,8,0,15,0,8,12,11,0,15,8,12,12,0,0,0,0,6,1,6,12,15,11,8,1,6,12,15,11,8,8,8,1,6,1,11,11,12,15,11,8,1,6,12,15,11,8,6,6,1,6,12,15,11,8,1,1,8,1,6,12,15,11,8,1,6,12,15,11,8,1,6,12,15,11,8,18,0,4,4,0,4,18,4,18,4,18,4,4,18,18,4,4,4,18,18,4,18,4,4,18,4,18,4,18,4,18],"f":[0,0,0,[[1,2],[[5,[3,4]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[6,7,8],[[9,[3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,8],[[-1,-2],3,[],[]],0,[[6,7],10],[[],1],[[11,11],10],[[-1,-2],10,[],[]],[[12,13],14],[[15,13],14],[[11,13],14],[[8,13],14],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[6,[[16,[7]]]],[[6,7],[[9,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],1],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,13],14],[[4,13],14],[[18,13],14],[[18,13],14],[18,4],[19,4],[-1,-1,[]],[20,18],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,[[9,[21]]]],[-1,22,[]],[-1,22,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,17,[]],[-1,17,[]]],"c":[],"p":[[3,"Model",4],[6,"Callback",0],[15,"tuple"],[4,"MinionError",81],[4,"Result",112],[3,"SymbolTable",4],[6,"VarName",4],[4,"VarDomain",4],[4,"Option",113],[15,"bool"],[4,"Constant",4],[4,"Constraint",4],[3,"Formatter",114],[6,"Result",114],[4,"Var",4],[3,"Vec",115],[3,"TypeId",116],[4,"RuntimeError",81],[3,"Error",117],[15,"u32"],[8,"Error",118],[3,"String",119]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
